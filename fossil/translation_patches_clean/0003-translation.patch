diff --git a/fossil/Fossil/src/shun.c b/fossil/Fossil/src/shun.c
index f1fe14b..712852f 100644
--- a/fossil/Fossil/src/shun.c
+++ b/fossil/Fossil/src/shun.c
@@ -100,7 +100,7 @@ void shun_page(void){
     }
     zUuid = zCanonical;
   }
-  style_header("Shunned Artifacts");
+  style_header("被回避的制品");
   if( zUuid && P("sub") && cgi_csrf_safe(2) ){
     const char *p = zUuid;
     int allExist = 1;
@@ -113,20 +113,19 @@ void shun_page(void){
       p += strlen(p)+1;
     }
     if( allExist ){
-      @ <p class="noMoreShun">Artifact(s)<br>
+      @ <p class="noMoreShun">制品<br>
       for( p = zUuid ; *p ; p += strlen(p)+1 ){
         @ <a href="%R/artifact/%s(p)">%s(p)</a><br>
       }
-      @ are no longer being shunned.</p>
+      @ 已不再被回避。</p>
     }else{
-      @ <p class="noMoreShun">Artifact(s)<br>
+      @ <p class="noMoreShun">制品<br>
       for( p = zUuid ; *p ; p += strlen(p)+1 ){
         @ %s(p)<br>
       }
-      @ will no longer be shunned but they may not exist in the repository.
-      @ It may be necessary to rebuild the repository
-      @ before the artifact content can be pulled in
-      @ from other repositories.</p>
+      @ 将不再被回避，但它们可能在仓库中不存在。
+      @ 可能需要先重建仓库，
+      @ 然后才能从其他仓库拉取制品内容。</p>
     }
   }
   if( zUuid && P("add") && cgi_csrf_safe(2) ){
@@ -150,13 +149,13 @@ void shun_page(void){
       admin_log("Shunned %Q", p);
       p += strlen(p)+1;
     }
-    @ <p class="shunned">Artifact(s)<br>
+    @ <p class="shunned">制品<br>
     for( p = zUuid ; *p ; p += strlen(p)+1 ){
       @ <a href="%R/artifact/%s(p)">%s(p)</a><br>
     }
-    @ have been shunned.  They will no longer be pushed.
-    @ They will be removed from the repository the next time the repository
-    @ is rebuilt using the <b>fossil rebuild</b> command-line</p>
+    @ 已被回避。它们将不再被推送。
+    @ 它们将在下次使用 <b>fossil rebuild</b> 命令行重建
+    @ 仓库时从仓库中移除。</p>
   }
   if( zUuid && reviewList ){
     const char *p;
@@ -170,11 +169,11 @@ void shun_page(void){
         @ Ambiguous<br>
       }else if( rid == 0 ){
         if( !hname_validate(p, strlen(p)) ){
-          @ Bad artifact<br>
+          @ 无效制品<br>
         }else if(db_int(0, "SELECT 1 FROM shun WHERE uuid=%Q", p)){
-          @ Already shunned<br>
+          @ 已被回避<br>
         }else{
-          @ Unknown<br>
+          @ 未知<br>
         }
       }else{
         char *zCmpUuid = db_text(0,
@@ -185,9 +184,9 @@ void shun_page(void){
             rid);
         if( fossil_strcmp(p, zCmpUuid)==0 ){
           nOk++;
-          @ OK</br>
+          @ 有效</br>
         }else{
-          @ Abbreviated<br>
+          @ 缩写形式<br>
         }
       }
     }
@@ -203,40 +202,36 @@ void shun_page(void){
     @ </td></tr></tbody></table>
     @ <p class="shunned">
     if( nOk < nTotal){
-      @ <b>Warning:</b> Not all artifacts
+      @ <b>警告：</b> 并非所有制品
     }else if( nTotal==1 ){
-      @ The artifact is present and
+      @ 该制品存在且
     }else{
-      @ All %i(nOk) artifacts are present and
+      @ 所有 %i(nOk) 个制品存在且
     }
-    @ can be shunned with its hash above.</p>
+    @ 可以通过上方的哈希值被回避。</p>
   }
   if( zRcvid ){
     nRcvid = atoi(zRcvid);
     numRows = db_int(0, "SELECT min(count(), 10) FROM blob WHERE rcvid=%d",
                      nRcvid);
   }
-  @ <p>A shunned artifact will not be pushed nor accepted in a pull and the
-  @ artifact content will be purged from the repository the next time the
-  @ repository is rebuilt.  A list of shunned artifacts can be seen at the
-  @ bottom of this page.</p>
+  @ <p>被回避的制品不会被推送，也不会在拉取时被接受，并且该制品
+  @ 内容将在下次重建仓库时从仓库中清除。本页面底部可以查看
+  @ 已被回避的制品列表。</p>
   @
   @ <a name="addshun"></a>
-  @ <p>To shun artifacts, enter their artifact hashes (the 40- or
-  @ 64-character lowercase hexadecimal hash of the artifact content) in the
-  @ following box and press the "Shun" button.  This will cause the artifacts
-  @ to be removed from the repository and will prevent the artifacts from being
-  @ readded to the repository by subsequent sync operation.</p>
+  @ <p>要回避制品，请在下方输入框中输入制品哈希值（制品内容的
+  @ 40或64字符小写十六进制哈希值），然后点击"回避"按钮。
+  @ 这将导致制品从仓库中移除，并防止后续同步操作将其重新添加
+  @ 到仓库中。</p>
   @
-  @ <p>Note that you must enter full artifact hashes, not abbreviations
-  @ or symbolic tags.</p>
+  @ <p>请注意，您必须输入完整的制品哈希值，而不是缩写
+  @ 或符号标签。</p>
   @
-  @ <p>Warning:  Shunning should only be used to remove inappropriate content
-  @ from the repository.  Inappropriate content includes such things as
-  @ spam added to Wiki, files that violate copyright or patent agreements,
-  @ or artifacts that by design or accident interfere with the processing
-  @ of the repository.  Do not shun artifacts merely to remove them from
-  @ sight - set the "hidden" tag on such artifacts instead.</p>
+  @ <p>警告：回避功能仅应用于从仓库中移除不适当的内容。
+  @ 不适当的内容包括添加到Wiki的垃圾内容、违反版权或专利协议的文件，
+  @ 或因设计或意外干扰仓库处理的制品。不要仅仅为了将制品
+  @ 从视野中移除而回避它们——对这些制品设置"hidden"标签即可。</p>
   @
   @ <blockquote>
   @ <form method="post" action="%R/%s(g.zPath)"><div>
@@ -259,17 +254,15 @@ void shun_page(void){
     }
   }
   @ </textarea>
-  @ <input type="submit" name="add" value="Shun">
-  @ <input type="submit" name="review" value="Review">
+  @ <input type="submit" name="add" value="回避">
+  @ <input type="submit" name="review" value="查看">
   @ </div></form>
   @ </blockquote>
   @
   @ <a name="delshun"></a>
-  @ <p>Enter the UUIDs of previously shunned artifacts to cause them to be
-  @ accepted again in the repository.  The artifacts content is not
-  @ restored because the content is unknown.  The only change is that
-  @ the formerly shunned artifacts will be accepted on subsequent sync
-  @ operations.</p>
+  @ <p>输入先前被回避的制品的UUID，使其重新被仓库接受。
+  @ 制品内容不会被恢复，因为内容未知。唯一的变化是，
+  @ 先前被回避的制品将在后续同步操作中被接受。</p>
   @
   @ <blockquote>
   @ <form method="post" action="%R/%s(g.zPath)"><div>
@@ -287,23 +280,22 @@ void shun_page(void){
     }
   }
   @ </textarea>
-  @ <input type="submit" name="sub" value="Accept">
+  @ <input type="submit" name="sub" value="接受">
   @ </div></form>
   @ </blockquote>
   @
-  @ <p>Press the Rebuild button below to rebuild the repository.  The
-  @ content of newly shunned artifacts is not purged until the repository
-  @ is rebuilt.  On larger repositories, the rebuild may take minute or
-  @ two, so be patient after pressing the button.</p>
+  @ <p>点击下方的重建按钮来重建仓库。新被回避的制品
+  @ 内容不会被清除，直到仓库被重建。在较大的仓库中，重建可能需要几分钟或
+  @ 更长时间，因此点击按钮后请耐心等待。</p>
   @
   @ <blockquote>
   @ <form method="post" action="%R/%s(g.zPath)"><div>
   login_insert_csrf_secret();
-  @ <input type="submit" name="rebuild" value="Rebuild">
+  @ <input type="submit" name="rebuild" value="重建">
   @ </div></form>
   @ </blockquote>
   @
-  @ <hr><p>Shunned Artifacts:</p>
+  @ <hr><p>已被回避的制品：</p>
   @ <blockquote><p>
   db_prepare(&q,
      "SELECT uuid, EXISTS(SELECT 1 FROM blob WHERE blob.uuid=shun.uuid)"
@@ -319,7 +311,7 @@ void shun_page(void){
     }
   }
   if( cnt==0 ){
-    @ <i>no artifacts are shunned on this server</i>
+    @ <i>此服务器上没有被回避的制品</i>
   }
   db_finalize(&q);
   @ </p></blockquote>
diff --git a/fossil/Fossil/src/sitemap.c b/fossil/Fossil/src/sitemap.c
index 0f5f023..8d952d3 100644
--- a/fossil/Fossil/src/sitemap.c
+++ b/fossil/Fossil/src/sitemap.c
@@ -68,13 +68,13 @@ void sitemap_page(void){
   }
   srchFlags = search_restrict(SRCH_ALL);
   if( !isPopup ){
-    style_header("Site Map");
+    style_header("站点地图");
     style_adunit_config(ADUNIT_RIGHT_OK);
   }
 
   @ <ul id="sitemap" class="columns" style="column-width:20em">
   if( (e&1)==0 ){
-    @ <li>%z(href("%R/home"))Home Page</a>
+    @ <li>%z(href("%R/home"))首页</a>
   }
 
   zExtra = db_get("sitemap-extra",0);
@@ -119,140 +119,139 @@ void sitemap_page(void){
   }
   @ </li>
   if( cgi_is_loopback(g.zIpAddr) && db_open_local(0) ){
-    @ <li>%z(href("%R/ckout"))Checkout Status</a></li>
+    @ <li>%z(href("%R/ckout"))检出状态</a></li>
   }
   if( g.perm.Read ){
     const char *zEditGlob = db_get("fileedit-glob","");
-    @ <li>%z(href("%R/tree"))File Browser</a>
+    @ <li>%z(href("%R/tree"))文件浏览器</a>
     @   <ul>
-    @   <li>%z(href("%R/tree?type=tree&ci=trunk"))Tree-view,
-    @        Trunk Check-in</a></li>
-    @   <li>%z(href("%R/tree?type=flat"))Flat-view</a></li>
-    @   <li>%z(href("%R/fileage?name=trunk"))File ages for Trunk</a></li>
-    @   <li>%z(href("%R/uvlist"))Unversioned Files</a>
+    @   <li>%z(href("%R/tree?type=tree&ci=trunk"))树状视图,
+    @        主干检出</a></li>
+    @   <li>%z(href("%R/tree?type=flat"))平面视图</a></li>
+    @   <li>%z(href("%R/fileage?name=trunk"))主干文件年代</a></li>
+    @   <li>%z(href("%R/uvlist"))未版本化文件</a>
     if( g.perm.Write && zEditGlob[0]!=0 ){
-      @   <li>%z(href("%R/fileedit"))On-line File Editor</li>
+      @   <li>%z(href("%R/fileedit"))在线文件编辑器</li>
     }
     @ </ul>
   }
   if( g.perm.Read ){
-    @ <li>%z(href("%R/timeline"))Project Timeline</a>
+    @ <li>%z(href("%R/timeline"))项目时间线</a>
     @ <ul>
-    @   <li>%z(href("%R/reports"))Activity Reports</a></li>
-    @   <li>%z(href("%R/sitemap-timeline"))Other timelines</a></li>
+    @   <li>%z(href("%R/reports"))活动报告</a></li>
+    @   <li>%z(href("%R/sitemap-timeline"))其他时间线</a></li>
     @ </ul>
     @ </li>
   }
   if( g.perm.Read ){
-    @ <li>%z(href("%R/brlist"))Branches</a>
+    @ <li>%z(href("%R/brlist"))分支</a>
     @ <ul>
-    @   <li>%z(href("%R/taglist"))Tags</a></li>
-    @   <li>%z(href("%R/leaves"))Leaf Check-ins</a></li>
+    @   <li>%z(href("%R/taglist"))标签</a></li>
+    @   <li>%z(href("%R/leaves"))叶节点检出</a></li>
     @ </ul>
     @ </li>
   }
   if( srchFlags ){
-    @ <li>%z(href("%R/search"))Search</a></li>
+    @ <li>%z(href("%R/search"))搜索</a></li>
   }
   if( g.perm.Chat ){
-    @ <li>%z(href("%R/chat"))Chat</a></li>
+    @ <li>%z(href("%R/chat"))聊天</a></li>
   }
   if( g.perm.RdForum ){
     const char *zTitle = db_get("forum-title","Forum");
     @ <li>%z(href("%R/forum"))%h(zTitle)</a>
     @ <ul>
-    @   <li>%z(href("%R/timeline?y=f"))Recent activity</a></li>
+    @   <li>%z(href("%R/timeline?y=f"))近期活动</a></li>
     @ </ul>
     @ </li>
   }
   if( g.perm.RdTkt ){
-    @ <li>%z(href("%R/reportlist"))Tickets/Bug Reports</a>
+    @ <li>%z(href("%R/reportlist"))工单/缺陷报告</a>
     @   <ul>
     if( srchFlags & SRCH_TKT ){
-      @   <li>%z(href("%R/tktsrch"))Ticket Search</a></li>
+      @   <li>%z(href("%R/tktsrch"))工单搜索</a></li>
     }
-    @   <li>%z(href("%R/timeline?y=t"))Recent activity</a></li>
-    @   <li>%z(href("%R/attachlist"))List of Attachments</a></li>
+    @   <li>%z(href("%R/timeline?y=t"))近期活动</a></li>
+    @   <li>%z(href("%R/attachlist"))附件列表</a></li>
     @   </ul>
     @ </li>
   }
   if( g.perm.RdWiki ){
-    @ <li>%z(href("%R/wikihelp"))Wiki</a>
+    @ <li>%z(href("%R/wikihelp"))维基</a>
     @   <ul>
     if( srchFlags & SRCH_WIKI ){
-      @     <li>%z(href("%R/wikisrch"))Wiki Search</a></li>
+      @     <li>%z(href("%R/wikisrch"))维基搜索</a></li>
     }
-    @     <li>%z(href("%R/wcontent"))List of Wiki Pages</a></li>
-    @     <li>%z(href("%R/timeline?y=w"))Recent activity</a></li>
-    @     <li>%z(href("%R/wikiedit?name=Sandbox"))Wiki Sandbox</a></li>
-    @     <li>%z(href("%R/attachlist"))List of Attachments</a></li>
-    @     <li>%z(href("%R/pikchrshow"))Pikchr Sandbox</a></li>
+    @     <li>%z(href("%R/wcontent"))维基页面列表</a></li>
+    @     <li>%z(href("%R/timeline?y=w"))近期活动</a></li>
+    @     <li>%z(href("%R/wikiedit?name=Sandbox"))维基沙盒</a></li>
+    @     <li>%z(href("%R/attachlist"))附件列表</a></li>
+    @     <li>%z(href("%R/pikchrshow"))Pikchr沙盒</a></li>
     @   </ul>
     @ </li>
   }
 
   if( !g.zLogin ){
-    @ <li>%z(href("%R/login"))Login</a>
+    @ <li>%z(href("%R/login"))登录</a>
     @ <ul>
     if( login_self_register_available(0) ){
-       @ <li>%z(href("%R/register"))Create a new account</a></li>
+       @ <li>%z(href("%R/register"))创建新账户</a></li>
     }
   }else {
-    @ <li>%z(href("%R/logout"))Logout from %h(g.zLogin)</a>
+    @ <li>%z(href("%R/logout"))退出登录 %h(g.zLogin)</a>
     @ <ul>
     if( g.perm.Password ){
-      @ <li>%z(href("%R/logout"))Change Password for %h(g.zLogin)</a></li>
+      @ <li>%z(href("%R/logout"))修改密码 %h(g.zLogin)</a></li>
     }
   }
   if( alert_enabled() && g.perm.EmailAlert ){
     if( login_is_individual() ){
-      @ <li>%z(href("%R/alerts"))Email Alerts for %h(g.zLogin)</a></li>
+      @ <li>%z(href("%R/alerts"))邮件提醒 %h(g.zLogin)</a></li>
     }else{
-      @ <li>%z(href("%R/subscribe"))Subscribe to Email Alerts</a></li>
+      @ <li>%z(href("%R/subscribe"))订阅邮件提醒</a></li>
     }
   }
-  @ <li>%z(href("%R/cookies"))Cookies</a></li>
+  @ <li>%z(href("%R/cookies"))Cookie设置</a></li>
   @ </ul>
   @ </li>
 
   if( g.perm.Read ){
-    @ <li>%z(href("%R/stat"))Repository Status</a>
+    @ <li>%z(href("%R/stat"))仓库状态</a>
     @   <ul>
-    @   <li>%z(href("%R/hash-collisions"))Collisions on hash prefixes</a></li>
+    @   <li>%z(href("%R/hash-collisions"))哈希前缀冲突</a></li>
     if( g.perm.Admin ){
-      @   <li>%z(href("%R/urllist"))List of URLs used to access
-      @       this repository</a></li>
+      @   <li>%z(href("%R/urllist"))访问此仓库的URL列表</a></li>
     }
-    @   <li>%z(href("%R/bloblist"))List of Artifacts</a></li>
+    @   <li>%z(href("%R/bloblist"))制品列表</a></li>
     @   </ul>
     @ </li>
   }
-  @ <li>%z(href("%R/help"))Help</a>
+  @ <li>%z(href("%R/help"))帮助</a>
   @   <ul>
   if( g.perm.Admin || g.perm.Write ||
       g.perm.WrForum || g.perm.WrTForum ||
       g.perm.NewWiki || g.perm.ApndWiki || g.perm.WrWiki || g.perm.ModWiki ||
       g.perm.NewTkt  || g.perm.ApndTkt  || g.perm.WrTkt  || g.perm.ModTkt ){
-    @   <li>%z(href("%R/wiki_rules"))Wiki Formatting Rules</a></li>
-    @   <li>%z(href("%R/md_rules"))Markdown Formatting Rules</a></li>
+    @   <li>%z(href("%R/wiki_rules"))维基格式规则</a></li>
+    @   <li>%z(href("%R/md_rules"))Markdown格式规则</a></li>
   }
-  @   <li>%z(href("%R/test-all-help"))All "help" text on a single page</a></li>
+  @   <li>%z(href("%R/test-all-help"))所有帮助文本（单页显示）</a></li>
   if( g.perm.Admin || g.perm.Write || g.perm.WrUnver ){
     @   <li>%z(href("%R/mimetype_list"))\
-    @ Filename suffix to MIME type map</a></li>
+    @ 文件名后缀到MIME类型映射</a></li>
   }
   @   </ul></li>
   if( g.perm.Admin ){
-    @ <li><a href="%R/setup">Administration Pages</a>
+    @ <li><a href="%R/setup">管理页面</a>
     @   <ul>
-    @   <li><a href="%R/secaudit0">Security Audit</a></li>
-    @   <li><a href="%R/modreq">Pending Moderation Requests</a></li>
+    @   <li><a href="%R/secaudit0">安全审计</a></li>
+    @   <li><a href="%R/modreq">待审核请求</a></li>
     @   </ul></li>
   }
-  @ <li>%z(href("%R/skins"))Skins</a></li>
-  @ <li>%z(href("%R/sitemap-test"))Test Pages</a></li>
+  @ <li>%z(href("%R/skins"))皮肤</a></li>
+  @ <li>%z(href("%R/sitemap-test"))测试页面</a></li>
   if( isPopup ){
-    @ <li>%z(href("%R/sitemap"))Site Map</a></li>
+    @ <li>%z(href("%R/sitemap"))站点地图</a></li>
   }
 
 end_of_sitemap:
@@ -282,34 +281,34 @@ void sitemap_test_page(void){
     g.jsHref = 0;
   }
   if( !isPopup ){
-    style_header("Test Page Map");
+    style_header("测试页面地图");
     style_adunit_config(ADUNIT_RIGHT_OK);
   }
   @ <ul id="sitemap" class="columns" style="column-width:20em">
   if( g.perm.Admin || db_get_boolean("test_env_enable",0) ){
-    @ <li>%z(href("%R/test-env"))CGI Environment Test</a></li>
+    @ <li>%z(href("%R/test-env"))CGI环境测试</a></li>
   }
   if( g.perm.Read ){
-    @ <li>%z(href("%R/test-rename-list"))List of file renames</a></li>
+    @ <li>%z(href("%R/test-rename-list"))文件重命名列表</a></li>
   }
-  @ <li>%z(href("%R/test-builtin-files"))List of built-in files</a></li>
-  @ <li>%z(href("%R/mimetype_list"))List of MIME types</a></li>
-  @ <li>%z(href("%R/hash-color-test"))Hash color test</a>
-  @ <li>%z(href("%R/test-bgcolor"))Background color test</a>
+  @ <li>%z(href("%R/test-builtin-files"))内置文件列表</a></li>
+  @ <li>%z(href("%R/mimetype_list"))MIME类型列表</a></li>
+  @ <li>%z(href("%R/hash-color-test"))哈希颜色测试</a>
+  @ <li>%z(href("%R/test-bgcolor"))背景颜色测试</a>
   if( g.perm.Admin ){
-    @ <li>%z(href("%R/test-backlinks"))List of backlinks</a></li>
-    @ <li>%z(href("%R/test-backlink-timeline"))Backlink timeline</a></li>
-    @ <li>%z(href("%R/phantoms"))List of phantom artifacts</a></li>
-    @ <li>%z(href("%R/test-warning"))Error Log test page</a></li>
-    @ <li>%z(href("%R/repo_stat1"))Repository <tt>sqlite_stat1</tt> table</a>
-    @ <li>%z(href("%R/repo_schema"))Repository schema</a></li>
+    @ <li>%z(href("%R/test-backlinks"))反向链接列表</a></li>
+    @ <li>%z(href("%R/test-backlink-timeline"))反向链接时间线</a></li>
+    @ <li>%z(href("%R/phantoms"))幻影制品列表</a></li>
+    @ <li>%z(href("%R/test-warning"))错误日志测试页面</a></li>
+    @ <li>%z(href("%R/repo_stat1"))仓库 <tt>sqlite_stat1</tt> 表</a>
+    @ <li>%z(href("%R/repo_schema"))仓库架构</a></li>
   }
   if( g.perm.Read && g.perm.Hyperlink ){
-    @ <li>%z(href("%R/timewarps"))Timeline of timewarps</a></li>
+    @ <li>%z(href("%R/timewarps"))时间扭曲时间线</a></li>
   }
-  @ <li>%z(href("%R/cookies"))Content of display preference cookie</a></li>
-  @ <li>%z(href("%R/test-captcha"))Random ASCII-art Captcha image</a></li>
-  @ <li>%z(href("%R/test-piechart"))Pie-Chart generator test</a></li>
+  @ <li>%z(href("%R/cookies"))显示首选项Cookie内容</a></li>
+  @ <li>%z(href("%R/test-captcha"))随机ASCII艺术验证码图片</a></li>
+  @ <li>%z(href("%R/test-piechart"))饼图生成器测试</a></li>
   if( !isPopup ){
     style_finish_page();
   }
@@ -334,22 +333,22 @@ void sitemap_timeline_page(void){
     g.jsHref = 0;
   }
   if( !isPopup ){
-    style_header("Timeline Examples");
+    style_header("时间线示例");
     style_adunit_config(ADUNIT_RIGHT_OK);
   }
   @ <ul id="sitemap" class="columns" style="column-width:20em">
-  @ <li>%z(href("%R/timeline?ymd"))Current day</a></li>
-  @ <li>%z(href("%R/timeline?yw"))Current week</a></li>
-  @ <li>%z(href("%R/timeline?ym"))Current month</a></li>
-  @ <li>%z(href("%R/thisdayinhistory"))Today in history</a></li>
-  @ <li>%z(href("%R/timeline?a=1970-01-01&y=ci&n=10"))First 10
-  @     check-ins</a></li>
-  @ <li>%z(href("%R/timeline?namechng"))File name changes</a></li>
-  @ <li>%z(href("%R/timeline?forks"))Forks</a></li>
-  @ <li>%z(href("%R/timeline?cherrypicks"))Cherrypick merges</a></li>
-  @ <li>%z(href("%R/timewarps"))Timewarps</a></li>
-  @ <li>%z(href("%R/timeline?ubg"))Color-coded by user</a></li>
-  @ <li>%z(href("%R/timeline?deltabg"))Delta vs. baseline manifests</a></li>
+  @ <li>%z(href("%R/timeline?ymd"))当天</a></li>
+  @ <li>%z(href("%R/timeline?yw"))当周</a></li>
+  @ <li>%z(href("%R/timeline?ym"))当月</a></li>
+  @ <li>%z(href("%R/thisdayinhistory"))历史上的今天</a></li>
+  @ <li>%z(href("%R/timeline?a=1970-01-01&y=ci&n=10"))前10个
+  @     检出</a></li>
+  @ <li>%z(href("%R/timeline?namechng"))文件名变更</a></li>
+  @ <li>%z(href("%R/timeline?forks"))分支</a></li>
+  @ <li>%z(href("%R/timeline?cherrypicks"))摘樱桃合并</a></li>
+  @ <li>%z(href("%R/timewarps"))时间扭曲</a></li>
+  @ <li>%z(href("%R/timeline?ubg"))按用户彩色编码</a></li>
+  @ <li>%z(href("%R/timeline?deltabg"))与基准清单的差异</a></li>
   @ </ul>
   if( !isPopup ){
     style_finish_page();
diff --git a/fossil/Fossil/win/VERSION.h b/fossil/Fossil/win/VERSION.h
index b5cc678..73e5c6a 100644
--- a/fossil/Fossil/win/VERSION.h
+++ b/fossil/Fossil/win/VERSION.h
@@ -1,6 +1,6 @@
 #define MANIFEST_UUID "99675884a93c09125dbfbef0ca47959626c81545c132e247e67a08bd12ac7256"
 #define MANIFEST_VERSION "[99675884a9]"
-#define FOSSIL_BUILD_HASH "a8391a0f10feae2e39627f3868cf25f5"
+#define FOSSIL_BUILD_HASH "8bd77252cbee2716c7066ae6043ea325"
 #define MANIFEST_DATE "2025-09-30 11:03:45"
 #define MANIFEST_YEAR "2025"
 #define MANIFEST_NUMERIC_DATE 20250930
diff --git a/fossil/Fossil/win/etag.h b/fossil/Fossil/win/etag.h
index 6f4e76e..e15916c 100644
--- a/fossil/Fossil/win/etag.h
+++ b/fossil/Fossil/win/etag.h
@@ -354,7 +354,7 @@ int db_int(int iDflt,const char *zSql,...);
 void md5sum_step_text(const char *zText,int nBytes);
 void md5sum_init(void);
 void etag_check(unsigned eFlags,const char *zHash);
-#define FOSSIL_BUILD_HASH "a8391a0f10feae2e39627f3868cf25f5"
+#define FOSSIL_BUILD_HASH "8bd77252cbee2716c7066ae6043ea325"
 const char *fossil_exe_id(void);
 #define ETAG_QUERY    0x10 /* Output depends on PATH_INFO and QUERY_STRING */
 #define ETAG_HASH     0x08 /* Output depends on a hash */
diff --git a/fossil/Fossil/win/shun_.c b/fossil/Fossil/win/shun_.c
index 2fd8e08..1da1edb 100644
--- a/fossil/Fossil/win/shun_.c
+++ b/fossil/Fossil/win/shun_.c
@@ -101,7 +101,7 @@ void shun_page(void){
     }
     zUuid = zCanonical;
   }
-  style_header("Shunned Artifacts");
+  style_header("被回避的制品");
   if( zUuid && P("sub") && cgi_csrf_safe(2) ){
     const char *p = zUuid;
     int allExist = 1;
@@ -114,20 +114,19 @@ void shun_page(void){
       p += strlen(p)+1;
     }
     if( allExist ){
-      cgi_printf("<p class=\"noMoreShun\">Artifact(s)<br>\n");
+      cgi_printf("<p class=\"noMoreShun\">制品<br>\n");
       for( p = zUuid ; *p ; p += strlen(p)+1 ){
         cgi_printf("<a href=\"%R/artifact/%s\">%s</a><br>\n",(p),(p));
       }
-      cgi_printf("are no longer being shunned.</p>\n");
+      cgi_printf("已不再被回避。</p>\n");
     }else{
-      cgi_printf("<p class=\"noMoreShun\">Artifact(s)<br>\n");
+      cgi_printf("<p class=\"noMoreShun\">制品<br>\n");
       for( p = zUuid ; *p ; p += strlen(p)+1 ){
         cgi_printf("%s<br>\n",(p));
       }
-      cgi_printf("will no longer be shunned but they may not exist in the repository.\n"
-             "It may be necessary to rebuild the repository\n"
-             "before the artifact content can be pulled in\n"
-             "from other repositories.</p>\n");
+      cgi_printf("将不再被回避，但它们可能在仓库中不存在。\n"
+             "可能需要先重建仓库，\n"
+             "然后才能从其他仓库拉取制品内容。</p>\n");
     }
   }
   if( zUuid && P("add") && cgi_csrf_safe(2) ){
@@ -151,13 +150,13 @@ void shun_page(void){
       admin_log("Shunned %Q", p);
       p += strlen(p)+1;
     }
-    cgi_printf("<p class=\"shunned\">Artifact(s)<br>\n");
+    cgi_printf("<p class=\"shunned\">制品<br>\n");
     for( p = zUuid ; *p ; p += strlen(p)+1 ){
       cgi_printf("<a href=\"%R/artifact/%s\">%s</a><br>\n",(p),(p));
     }
-    cgi_printf("have been shunned.  They will no longer be pushed.\n"
-           "They will be removed from the repository the next time the repository\n"
-           "is rebuilt using the <b>fossil rebuild</b> command-line</p>\n");
+    cgi_printf("已被回避。它们将不再被推送。\n"
+           "它们将在下次使用 <b>fossil rebuild</b> 命令行重建\n"
+           "仓库时从仓库中移除。</p>\n");
   }
   if( zUuid && reviewList ){
     const char *p;
@@ -171,11 +170,11 @@ void shun_page(void){
         cgi_printf("Ambiguous<br>\n");
       }else if( rid == 0 ){
         if( !hname_validate(p, strlen(p)) ){
-          cgi_printf("Bad artifact<br>\n");
+          cgi_printf("无效制品<br>\n");
         }else if(db_int(0, "SELECT 1 FROM shun WHERE uuid=%Q", p)){
-          cgi_printf("Already shunned<br>\n");
+          cgi_printf("已被回避<br>\n");
         }else{
-          cgi_printf("Unknown<br>\n");
+          cgi_printf("未知<br>\n");
         }
       }else{
         char *zCmpUuid = db_text(0,
@@ -186,9 +185,9 @@ void shun_page(void){
             rid);
         if( fossil_strcmp(p, zCmpUuid)==0 ){
           nOk++;
-          cgi_printf("OK</br>\n");
+          cgi_printf("有效</br>\n");
         }else{
-          cgi_printf("Abbreviated<br>\n");
+          cgi_printf("缩写形式<br>\n");
         }
       }
     }
@@ -204,40 +203,36 @@ void shun_page(void){
     cgi_printf("</td></tr></tbody></table>\n"
            "<p class=\"shunned\">\n");
     if( nOk < nTotal){
-      cgi_printf("<b>Warning:</b> Not all artifacts\n");
+      cgi_printf("<b>警告：</b> 并非所有制品\n");
     }else if( nTotal==1 ){
-      cgi_printf("The artifact is present and\n");
+      cgi_printf("该制品存在且\n");
     }else{
-      cgi_printf("All %i artifacts are present and\n",(nOk));
+      cgi_printf("所有 %i 个制品存在且\n",(nOk));
     }
-    cgi_printf("can be shunned with its hash above.</p>\n");
+    cgi_printf("可以通过上方的哈希值被回避。</p>\n");
   }
   if( zRcvid ){
     nRcvid = atoi(zRcvid);
     numRows = db_int(0, "SELECT min(count(), 10) FROM blob WHERE rcvid=%d",
                      nRcvid);
   }
-  cgi_printf("<p>A shunned artifact will not be pushed nor accepted in a pull and the\n"
-         "artifact content will be purged from the repository the next time the\n"
-         "repository is rebuilt.  A list of shunned artifacts can be seen at the\n"
-         "bottom of this page.</p>\n"
+  cgi_printf("<p>被回避的制品不会被推送，也不会在拉取时被接受，并且该制品\n"
+         "内容将在下次重建仓库时从仓库中清除。本页面底部可以查看\n"
+         "已被回避的制品列表。</p>\n"
          "\n"
          "<a name=\"addshun\"></a>\n"
-         "<p>To shun artifacts, enter their artifact hashes (the 40- or\n"
-         "64-character lowercase hexadecimal hash of the artifact content) in the\n"
-         "following box and press the \"Shun\" button.  This will cause the artifacts\n"
-         "to be removed from the repository and will prevent the artifacts from being\n"
-         "readded to the repository by subsequent sync operation.</p>\n"
+         "<p>要回避制品，请在下方输入框中输入制品哈希值（制品内容的\n"
+         "40或64字符小写十六进制哈希值），然后点击\"回避\"按钮。\n"
+         "这将导致制品从仓库中移除，并防止后续同步操作将其重新添加\n"
+         "到仓库中。</p>\n"
          "\n"
-         "<p>Note that you must enter full artifact hashes, not abbreviations\n"
-         "or symbolic tags.</p>\n"
+         "<p>请注意，您必须输入完整的制品哈希值，而不是缩写\n"
+         "或符号标签。</p>\n"
          "\n"
-         "<p>Warning:  Shunning should only be used to remove inappropriate content\n"
-         "from the repository.  Inappropriate content includes such things as\n"
-         "spam added to Wiki, files that violate copyright or patent agreements,\n"
-         "or artifacts that by design or accident interfere with the processing\n"
-         "of the repository.  Do not shun artifacts merely to remove them from\n"
-         "sight - set the \"hidden\" tag on such artifacts instead.</p>\n"
+         "<p>警告：回避功能仅应用于从仓库中移除不适当的内容。\n"
+         "不适当的内容包括添加到Wiki的垃圾内容、违反版权或专利协议的文件，\n"
+         "或因设计或意外干扰仓库处理的制品。不要仅仅为了将制品\n"
+         "从视野中移除而回避它们——对这些制品设置\"hidden\"标签即可。</p>\n"
          "\n"
          "<blockquote>\n"
          "<form method=\"post\" action=\"%R/%s\"><div>\n",(g.zPath));
@@ -260,17 +255,15 @@ void shun_page(void){
     }
   }
   cgi_printf("</textarea>\n"
-         "<input type=\"submit\" name=\"add\" value=\"Shun\">\n"
-         "<input type=\"submit\" name=\"review\" value=\"Review\">\n"
+         "<input type=\"submit\" name=\"add\" value=\"回避\">\n"
+         "<input type=\"submit\" name=\"review\" value=\"查看\">\n"
          "</div></form>\n"
          "</blockquote>\n"
          "\n"
          "<a name=\"delshun\"></a>\n"
-         "<p>Enter the UUIDs of previously shunned artifacts to cause them to be\n"
-         "accepted again in the repository.  The artifacts content is not\n"
-         "restored because the content is unknown.  The only change is that\n"
-         "the formerly shunned artifacts will be accepted on subsequent sync\n"
-         "operations.</p>\n"
+         "<p>输入先前被回避的制品的UUID，使其重新被仓库接受。\n"
+         "制品内容不会被恢复，因为内容未知。唯一的变化是，\n"
+         "先前被回避的制品将在后续同步操作中被接受。</p>\n"
          "\n"
          "<blockquote>\n"
          "<form method=\"post\" action=\"%R/%s\"><div>\n",(g.zPath));
@@ -288,23 +281,22 @@ void shun_page(void){
     }
   }
   cgi_printf("</textarea>\n"
-         "<input type=\"submit\" name=\"sub\" value=\"Accept\">\n"
+         "<input type=\"submit\" name=\"sub\" value=\"接受\">\n"
          "</div></form>\n"
          "</blockquote>\n"
          "\n"
-         "<p>Press the Rebuild button below to rebuild the repository.  The\n"
-         "content of newly shunned artifacts is not purged until the repository\n"
-         "is rebuilt.  On larger repositories, the rebuild may take minute or\n"
-         "two, so be patient after pressing the button.</p>\n"
+         "<p>点击下方的重建按钮来重建仓库。新被回避的制品\n"
+         "内容不会被清除，直到仓库被重建。在较大的仓库中，重建可能需要几分钟或\n"
+         "更长时间，因此点击按钮后请耐心等待。</p>\n"
          "\n"
          "<blockquote>\n"
          "<form method=\"post\" action=\"%R/%s\"><div>\n",(g.zPath));
   login_insert_csrf_secret();
-  cgi_printf("<input type=\"submit\" name=\"rebuild\" value=\"Rebuild\">\n"
+  cgi_printf("<input type=\"submit\" name=\"rebuild\" value=\"重建\">\n"
          "</div></form>\n"
          "</blockquote>\n"
          "\n"
-         "<hr><p>Shunned Artifacts:</p>\n"
+         "<hr><p>已被回避的制品：</p>\n"
          "<blockquote><p>\n");
   db_prepare(&q,
      "SELECT uuid, EXISTS(SELECT 1 FROM blob WHERE blob.uuid=shun.uuid)"
@@ -320,7 +312,7 @@ void shun_page(void){
     }
   }
   if( cnt==0 ){
-    cgi_printf("<i>no artifacts are shunned on this server</i>\n");
+    cgi_printf("<i>此服务器上没有被回避的制品</i>\n");
   }
   db_finalize(&q);
   cgi_printf("</p></blockquote>\n");
diff --git a/fossil/Fossil/win/sitemap_.c b/fossil/Fossil/win/sitemap_.c
index 0b8469e..9fef91d 100644
--- a/fossil/Fossil/win/sitemap_.c
+++ b/fossil/Fossil/win/sitemap_.c
@@ -69,13 +69,13 @@ void sitemap_page(void){
   }
   srchFlags = search_restrict(SRCH_ALL);
   if( !isPopup ){
-    style_header("Site Map");
+    style_header("站点地图");
     style_adunit_config(ADUNIT_RIGHT_OK);
   }
 
   cgi_printf("<ul id=\"sitemap\" class=\"columns\" style=\"column-width:20em\">\n");
   if( (e&1)==0 ){
-    cgi_printf("<li>%zHome Page</a>\n",(href("%R/home")));
+    cgi_printf("<li>%z首页</a>\n",(href("%R/home")));
   }
 
   zExtra = db_get("sitemap-extra",0);
@@ -120,140 +120,139 @@ void sitemap_page(void){
   }
   cgi_printf("</li>\n");
   if( cgi_is_loopback(g.zIpAddr) && db_open_local(0) ){
-    cgi_printf("<li>%zCheckout Status</a></li>\n",(href("%R/ckout")));
+    cgi_printf("<li>%z检出状态</a></li>\n",(href("%R/ckout")));
   }
   if( g.perm.Read ){
     const char *zEditGlob = db_get("fileedit-glob","");
-    cgi_printf("<li>%zFile Browser</a>\n"
+    cgi_printf("<li>%z文件浏览器</a>\n"
            "  <ul>\n"
-           "  <li>%zTree-view,\n"
-           "       Trunk Check-in</a></li>\n"
-           "  <li>%zFlat-view</a></li>\n"
-           "  <li>%zFile ages for Trunk</a></li>\n"
-           "  <li>%zUnversioned Files</a>\n",(href("%R/tree")),(href("%R/tree?type=tree&ci=trunk")),(href("%R/tree?type=flat")),(href("%R/fileage?name=trunk")),(href("%R/uvlist")));
+           "  <li>%z树状视图,\n"
+           "       主干检出</a></li>\n"
+           "  <li>%z平面视图</a></li>\n"
+           "  <li>%z主干文件年代</a></li>\n"
+           "  <li>%z未版本化文件</a>\n",(href("%R/tree")),(href("%R/tree?type=tree&ci=trunk")),(href("%R/tree?type=flat")),(href("%R/fileage?name=trunk")),(href("%R/uvlist")));
     if( g.perm.Write && zEditGlob[0]!=0 ){
-      cgi_printf("  <li>%zOn-line File Editor</li>\n",(href("%R/fileedit")));
+      cgi_printf("  <li>%z在线文件编辑器</li>\n",(href("%R/fileedit")));
     }
     cgi_printf("</ul>\n");
   }
   if( g.perm.Read ){
-    cgi_printf("<li>%zProject Timeline</a>\n"
+    cgi_printf("<li>%z项目时间线</a>\n"
            "<ul>\n"
-           "  <li>%zActivity Reports</a></li>\n"
-           "  <li>%zOther timelines</a></li>\n"
+           "  <li>%z活动报告</a></li>\n"
+           "  <li>%z其他时间线</a></li>\n"
            "</ul>\n"
            "</li>\n",(href("%R/timeline")),(href("%R/reports")),(href("%R/sitemap-timeline")));
   }
   if( g.perm.Read ){
-    cgi_printf("<li>%zBranches</a>\n"
+    cgi_printf("<li>%z分支</a>\n"
            "<ul>\n"
-           "  <li>%zTags</a></li>\n"
-           "  <li>%zLeaf Check-ins</a></li>\n"
+           "  <li>%z标签</a></li>\n"
+           "  <li>%z叶节点检出</a></li>\n"
            "</ul>\n"
            "</li>\n",(href("%R/brlist")),(href("%R/taglist")),(href("%R/leaves")));
   }
   if( srchFlags ){
-    cgi_printf("<li>%zSearch</a></li>\n",(href("%R/search")));
+    cgi_printf("<li>%z搜索</a></li>\n",(href("%R/search")));
   }
   if( g.perm.Chat ){
-    cgi_printf("<li>%zChat</a></li>\n",(href("%R/chat")));
+    cgi_printf("<li>%z聊天</a></li>\n",(href("%R/chat")));
   }
   if( g.perm.RdForum ){
     const char *zTitle = db_get("forum-title","Forum");
     cgi_printf("<li>%z%h</a>\n"
            "<ul>\n"
-           "  <li>%zRecent activity</a></li>\n"
+           "  <li>%z近期活动</a></li>\n"
            "</ul>\n"
            "</li>\n",(href("%R/forum")),(zTitle),(href("%R/timeline?y=f")));
   }
   if( g.perm.RdTkt ){
-    cgi_printf("<li>%zTickets/Bug Reports</a>\n"
+    cgi_printf("<li>%z工单/缺陷报告</a>\n"
            "  <ul>\n",(href("%R/reportlist")));
     if( srchFlags & SRCH_TKT ){
-      cgi_printf("  <li>%zTicket Search</a></li>\n",(href("%R/tktsrch")));
+      cgi_printf("  <li>%z工单搜索</a></li>\n",(href("%R/tktsrch")));
     }
-    cgi_printf("  <li>%zRecent activity</a></li>\n"
-           "  <li>%zList of Attachments</a></li>\n"
+    cgi_printf("  <li>%z近期活动</a></li>\n"
+           "  <li>%z附件列表</a></li>\n"
            "  </ul>\n"
            "</li>\n",(href("%R/timeline?y=t")),(href("%R/attachlist")));
   }
   if( g.perm.RdWiki ){
-    cgi_printf("<li>%zWiki</a>\n"
+    cgi_printf("<li>%z维基</a>\n"
            "  <ul>\n",(href("%R/wikihelp")));
     if( srchFlags & SRCH_WIKI ){
-      cgi_printf("    <li>%zWiki Search</a></li>\n",(href("%R/wikisrch")));
+      cgi_printf("    <li>%z维基搜索</a></li>\n",(href("%R/wikisrch")));
     }
-    cgi_printf("    <li>%zList of Wiki Pages</a></li>\n"
-           "    <li>%zRecent activity</a></li>\n"
-           "    <li>%zWiki Sandbox</a></li>\n"
-           "    <li>%zList of Attachments</a></li>\n"
-           "    <li>%zPikchr Sandbox</a></li>\n"
+    cgi_printf("    <li>%z维基页面列表</a></li>\n"
+           "    <li>%z近期活动</a></li>\n"
+           "    <li>%z维基沙盒</a></li>\n"
+           "    <li>%z附件列表</a></li>\n"
+           "    <li>%zPikchr沙盒</a></li>\n"
            "  </ul>\n"
            "</li>\n",(href("%R/wcontent")),(href("%R/timeline?y=w")),(href("%R/wikiedit?name=Sandbox")),(href("%R/attachlist")),(href("%R/pikchrshow")));
   }
 
   if( !g.zLogin ){
-    cgi_printf("<li>%zLogin</a>\n"
+    cgi_printf("<li>%z登录</a>\n"
            "<ul>\n",(href("%R/login")));
     if( login_self_register_available(0) ){
-       cgi_printf("<li>%zCreate a new account</a></li>\n",(href("%R/register")));
+       cgi_printf("<li>%z创建新账户</a></li>\n",(href("%R/register")));
     }
   }else {
-    cgi_printf("<li>%zLogout from %h</a>\n"
+    cgi_printf("<li>%z退出登录 %h</a>\n"
            "<ul>\n",(href("%R/logout")),(g.zLogin));
     if( g.perm.Password ){
-      cgi_printf("<li>%zChange Password for %h</a></li>\n",(href("%R/logout")),(g.zLogin));
+      cgi_printf("<li>%z修改密码 %h</a></li>\n",(href("%R/logout")),(g.zLogin));
     }
   }
   if( alert_enabled() && g.perm.EmailAlert ){
     if( login_is_individual() ){
-      cgi_printf("<li>%zEmail Alerts for %h</a></li>\n",(href("%R/alerts")),(g.zLogin));
+      cgi_printf("<li>%z邮件提醒 %h</a></li>\n",(href("%R/alerts")),(g.zLogin));
     }else{
-      cgi_printf("<li>%zSubscribe to Email Alerts</a></li>\n",(href("%R/subscribe")));
+      cgi_printf("<li>%z订阅邮件提醒</a></li>\n",(href("%R/subscribe")));
     }
   }
-  cgi_printf("<li>%zCookies</a></li>\n"
+  cgi_printf("<li>%zCookie设置</a></li>\n"
          "</ul>\n"
          "</li>\n",(href("%R/cookies")));
 
   if( g.perm.Read ){
-    cgi_printf("<li>%zRepository Status</a>\n"
+    cgi_printf("<li>%z仓库状态</a>\n"
            "  <ul>\n"
-           "  <li>%zCollisions on hash prefixes</a></li>\n",(href("%R/stat")),(href("%R/hash-collisions")));
+           "  <li>%z哈希前缀冲突</a></li>\n",(href("%R/stat")),(href("%R/hash-collisions")));
     if( g.perm.Admin ){
-      cgi_printf("  <li>%zList of URLs used to access\n"
-             "      this repository</a></li>\n",(href("%R/urllist")));
+      cgi_printf("  <li>%z访问此仓库的URL列表</a></li>\n",(href("%R/urllist")));
     }
-    cgi_printf("  <li>%zList of Artifacts</a></li>\n"
+    cgi_printf("  <li>%z制品列表</a></li>\n"
            "  </ul>\n"
            "</li>\n",(href("%R/bloblist")));
   }
-  cgi_printf("<li>%zHelp</a>\n"
+  cgi_printf("<li>%z帮助</a>\n"
          "  <ul>\n",(href("%R/help")));
   if( g.perm.Admin || g.perm.Write ||
       g.perm.WrForum || g.perm.WrTForum ||
       g.perm.NewWiki || g.perm.ApndWiki || g.perm.WrWiki || g.perm.ModWiki ||
       g.perm.NewTkt  || g.perm.ApndTkt  || g.perm.WrTkt  || g.perm.ModTkt ){
-    cgi_printf("  <li>%zWiki Formatting Rules</a></li>\n"
-           "  <li>%zMarkdown Formatting Rules</a></li>\n",(href("%R/wiki_rules")),(href("%R/md_rules")));
+    cgi_printf("  <li>%z维基格式规则</a></li>\n"
+           "  <li>%zMarkdown格式规则</a></li>\n",(href("%R/wiki_rules")),(href("%R/md_rules")));
   }
-  cgi_printf("  <li>%zAll \"help\" text on a single page</a></li>\n",(href("%R/test-all-help")));
+  cgi_printf("  <li>%z所有帮助文本（单页显示）</a></li>\n",(href("%R/test-all-help")));
   if( g.perm.Admin || g.perm.Write || g.perm.WrUnver ){
     cgi_printf("  <li>%z"
-           "Filename suffix to MIME type map</a></li>\n",(href("%R/mimetype_list")));
+           "文件名后缀到MIME类型映射</a></li>\n",(href("%R/mimetype_list")));
   }
   cgi_printf("  </ul></li>\n");
   if( g.perm.Admin ){
-    cgi_printf("<li><a href=\"%R/setup\">Administration Pages</a>\n"
+    cgi_printf("<li><a href=\"%R/setup\">管理页面</a>\n"
            "  <ul>\n"
-           "  <li><a href=\"%R/secaudit0\">Security Audit</a></li>\n"
-           "  <li><a href=\"%R/modreq\">Pending Moderation Requests</a></li>\n"
+           "  <li><a href=\"%R/secaudit0\">安全审计</a></li>\n"
+           "  <li><a href=\"%R/modreq\">待审核请求</a></li>\n"
            "  </ul></li>\n");
   }
-  cgi_printf("<li>%zSkins</a></li>\n"
-         "<li>%zTest Pages</a></li>\n",(href("%R/skins")),(href("%R/sitemap-test")));
+  cgi_printf("<li>%z皮肤</a></li>\n"
+         "<li>%z测试页面</a></li>\n",(href("%R/skins")),(href("%R/sitemap-test")));
   if( isPopup ){
-    cgi_printf("<li>%zSite Map</a></li>\n",(href("%R/sitemap")));
+    cgi_printf("<li>%z站点地图</a></li>\n",(href("%R/sitemap")));
   }
 
 end_of_sitemap:
@@ -283,34 +282,34 @@ void sitemap_test_page(void){
     g.jsHref = 0;
   }
   if( !isPopup ){
-    style_header("Test Page Map");
+    style_header("测试页面地图");
     style_adunit_config(ADUNIT_RIGHT_OK);
   }
   cgi_printf("<ul id=\"sitemap\" class=\"columns\" style=\"column-width:20em\">\n");
   if( g.perm.Admin || db_get_boolean("test_env_enable",0) ){
-    cgi_printf("<li>%zCGI Environment Test</a></li>\n",(href("%R/test-env")));
+    cgi_printf("<li>%zCGI环境测试</a></li>\n",(href("%R/test-env")));
   }
   if( g.perm.Read ){
-    cgi_printf("<li>%zList of file renames</a></li>\n",(href("%R/test-rename-list")));
+    cgi_printf("<li>%z文件重命名列表</a></li>\n",(href("%R/test-rename-list")));
   }
-  cgi_printf("<li>%zList of built-in files</a></li>\n"
-         "<li>%zList of MIME types</a></li>\n"
-         "<li>%zHash color test</a>\n"
-         "<li>%zBackground color test</a>\n",(href("%R/test-builtin-files")),(href("%R/mimetype_list")),(href("%R/hash-color-test")),(href("%R/test-bgcolor")));
+  cgi_printf("<li>%z内置文件列表</a></li>\n"
+         "<li>%zMIME类型列表</a></li>\n"
+         "<li>%z哈希颜色测试</a>\n"
+         "<li>%z背景颜色测试</a>\n",(href("%R/test-builtin-files")),(href("%R/mimetype_list")),(href("%R/hash-color-test")),(href("%R/test-bgcolor")));
   if( g.perm.Admin ){
-    cgi_printf("<li>%zList of backlinks</a></li>\n"
-           "<li>%zBacklink timeline</a></li>\n"
-           "<li>%zList of phantom artifacts</a></li>\n"
-           "<li>%zError Log test page</a></li>\n"
-           "<li>%zRepository <tt>sqlite_stat1</tt> table</a>\n"
-           "<li>%zRepository schema</a></li>\n",(href("%R/test-backlinks")),(href("%R/test-backlink-timeline")),(href("%R/phantoms")),(href("%R/test-warning")),(href("%R/repo_stat1")),(href("%R/repo_schema")));
+    cgi_printf("<li>%z反向链接列表</a></li>\n"
+           "<li>%z反向链接时间线</a></li>\n"
+           "<li>%z幻影制品列表</a></li>\n"
+           "<li>%z错误日志测试页面</a></li>\n"
+           "<li>%z仓库 <tt>sqlite_stat1</tt> 表</a>\n"
+           "<li>%z仓库架构</a></li>\n",(href("%R/test-backlinks")),(href("%R/test-backlink-timeline")),(href("%R/phantoms")),(href("%R/test-warning")),(href("%R/repo_stat1")),(href("%R/repo_schema")));
   }
   if( g.perm.Read && g.perm.Hyperlink ){
-    cgi_printf("<li>%zTimeline of timewarps</a></li>\n",(href("%R/timewarps")));
+    cgi_printf("<li>%z时间扭曲时间线</a></li>\n",(href("%R/timewarps")));
   }
-  cgi_printf("<li>%zContent of display preference cookie</a></li>\n"
-         "<li>%zRandom ASCII-art Captcha image</a></li>\n"
-         "<li>%zPie-Chart generator test</a></li>\n",(href("%R/cookies")),(href("%R/test-captcha")),(href("%R/test-piechart")));
+  cgi_printf("<li>%z显示首选项Cookie内容</a></li>\n"
+         "<li>%z随机ASCII艺术验证码图片</a></li>\n"
+         "<li>%z饼图生成器测试</a></li>\n",(href("%R/cookies")),(href("%R/test-captcha")),(href("%R/test-piechart")));
   if( !isPopup ){
     style_finish_page();
   }
@@ -335,22 +334,22 @@ void sitemap_timeline_page(void){
     g.jsHref = 0;
   }
   if( !isPopup ){
-    style_header("Timeline Examples");
+    style_header("时间线示例");
     style_adunit_config(ADUNIT_RIGHT_OK);
   }
   cgi_printf("<ul id=\"sitemap\" class=\"columns\" style=\"column-width:20em\">\n"
-         "<li>%zCurrent day</a></li>\n"
-         "<li>%zCurrent week</a></li>\n"
-         "<li>%zCurrent month</a></li>\n"
-         "<li>%zToday in history</a></li>\n"
-         "<li>%zFirst 10\n"
-         "    check-ins</a></li>\n"
-         "<li>%zFile name changes</a></li>\n"
-         "<li>%zForks</a></li>\n"
-         "<li>%zCherrypick merges</a></li>\n"
-         "<li>%zTimewarps</a></li>\n"
-         "<li>%zColor-coded by user</a></li>\n"
-         "<li>%zDelta vs. baseline manifests</a></li>\n"
+         "<li>%z当天</a></li>\n"
+         "<li>%z当周</a></li>\n"
+         "<li>%z当月</a></li>\n"
+         "<li>%z历史上的今天</a></li>\n"
+         "<li>%z前10个\n"
+         "    检出</a></li>\n"
+         "<li>%z文件名变更</a></li>\n"
+         "<li>%z分支</a></li>\n"
+         "<li>%z摘樱桃合并</a></li>\n"
+         "<li>%z时间扭曲</a></li>\n"
+         "<li>%z按用户彩色编码</a></li>\n"
+         "<li>%z与基准清单的差异</a></li>\n"
          "</ul>\n",(href("%R/timeline?ymd")),(href("%R/timeline?yw")),(href("%R/timeline?ym")),(href("%R/thisdayinhistory")),(href("%R/timeline?a=1970-01-01&y=ci&n=10")),(href("%R/timeline?namechng")),(href("%R/timeline?forks")),(href("%R/timeline?cherrypicks")),(href("%R/timewarps")),(href("%R/timeline?ubg")),(href("%R/timeline?deltabg")));
   if( !isPopup ){
     style_finish_page();
diff --git a/fossil/_FOSSIL_ b/fossil/_FOSSIL_
index 5176220..fa547d9 100644
